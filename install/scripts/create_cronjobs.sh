#!/bin/bash
#
# Installs the cronjob scripts
#
set -o errexit -o nounset
SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )


show_help() {
  cat << EOF
Installs the cronjob scripts

USAGE: ${0##*/} [CRONJOBS]

CRONJOBS     The list of cronjobs (one per line)
             The list could be empty.
EOF
}

if [[ "$#" -ge 2 ]] ; then
  show_help
  exit 1
fi

CRONJOBS=""
if [[ "$#" -eq 1 ]] ; then 
	CRONJOBS="$1"
fi

PREFIX_HEADER="# START VUFIND AUTOGENERATED"
SUFFIX_HEADER="# END VUFIND AUTOGENERATED"

if [[ -n $(crontab -l | grep "$PREFIX_HEADER") ]]; then
	# Found existing cron jobs
	VUFIND_SECTION_SEARCH_PATTERN="\n$PREFIX_HEADER[a-zA-Z0-9 \n\*.]*$SUFFIX_HEADER\n"
	if [[ -n "$CRONJOBS" ]] ; then
		VUFIND_SECTION_REPLACEMENT="\n$PREFIX_HEADER\n$CRONJOBS\n$SUFFIX_HEADER\n"
	else
		VUFIND_SECTION_REPLACEMENT="\n"
	fi
	
	# see http://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed
	# The delimiter \` shouldn't be a charactor of the pattern or replacement.
	EXPRESSION=$(echo "s\`$VUFIND_SECTION_SEARCH_PATTERN\`$VUFIND_SECTION_REPLACEMENT\`g" | sed -e ':a;N;$!ba;')

	echo ""
	echo "///EXPRESSION"
	echo ""
	echo "$EXPRESSION"
	echo ""
	echo "EXPRESSION///"
	echo ""
	# see http://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed
	crontab -l | sed -e ':a;N;$!ba;' -e "$EXPRESSION" | crontab
else
	# No cron jobs found.
	echo -e "$(crontab -l)" "\n$PREFIX_HEADER\n$CRONJOBS\n$SUFFIX_HEADER\n" | crontab
fi
